esphome:
  name: dcbuddy
  friendly_name: dcbuddy
  on_boot:
    priority: 600
    then:
      - output.turn_on: power_led

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:
  logs:
    component: ERROR # Supress warning logs from the display drawing for too long

# Enable Home Assistant API
api:

ota:

wifi:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "DCBuddy Fallback Hotspot"
    password: "password"

web_server:
  port: 80
  log: False

captive_portal:

status_led:
  pin: GPIO3

output:
  - id: power_led
    platform: gpio
    pin: GPIO4
    

font:
    - file: 'five.ttf'
      id: five
      size: 8
    - file: "refsan.ttf"
      id: refsan
      size: 9
    - file: "PixelGameFont.ttf"
      id: bigfont
      size: 14


display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    #address: 0x78
    update_interval: 1s
    lambda: |-

     int offset = 0;
     it.printf(0, 3+offset, id(five), "A");
     it.printf(8, offset, id(bigfont), "%1.2f", fabs(id(amps_1).state));

     it.printf(55, 3+offset, id(five), "E");
     it.printf(55+8, offset, id(bigfont), "%1.2f", fabs(id(amps_5).state));
     
     offset += 16;

     it.printf(0, 3+offset, id(five), "B");
     it.printf(8, offset, id(bigfont), "%1.2f", fabs(id(amps_2).state));

     it.printf(55, 3+offset, id(five), "F");
     it.printf(55+8, offset, id(bigfont), "%1.2f", fabs(id(amps_6).state));
     
     offset += 16;
     
     it.printf(0, 3+offset, id(five), "C");
     it.printf(8, offset, id(bigfont), "%1.2f", fabs(id(amps_3).state));

     it.printf(55, 3+offset, id(five), "G");
     it.printf(55+8, offset, id(bigfont), "%1.2f", fabs(id(amps_7).state));


     offset += 16;
     
     it.printf(0, 3+offset, id(five), "D");
     it.printf(8, offset, id(bigfont), "%1.2f", fabs(id(amps_4).state));
     

     it.set_rotation(DISPLAY_ROTATION_270_DEGREES);
     it.printf(20, 38, id(five), "AMPS");
     it.printf(30, 38+55, id(five), "AMPS");
     it.line(0,48,63,48);
     it.line(16,48+55,63,48+55);
     it.line(16,48,16,127);

     it.filled_rectangle(16,48+55,63,127);

     it.printf(23, 48+55+3, id(bigfont), COLOR_OFF, "%2.1f", id(volts_in).state);
     it.printf(25, 48+55+2+10, id(five), COLOR_OFF, "VOLTS");

     it.set_rotation(DISPLAY_ROTATION_0_DEGREES);


     it.printf(50, 46, id(refsan), "%s", id(ip1).state.c_str());

canbus:
  - platform: esp32_can
    tx_pin: GPIO0
    rx_pin: GPIO1
    bit_rate: 125kbps
    can_id: 4
    on_frame:
    - can_id: 500
      use_extended_id: false
      then:
      - lambda: |-
          std::string b(x.begin(), x.end());
          ESP_LOGI("can id 500", "%s", &b[0] );

   
sensor:
  - platform: uptime
    name: Uptime Sensor
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 60s
    id: wifisignal
  - platform: ads1115
    ads1115_id: ads1115_1
    multiplexer: 'A0_GND'
    gain: 6.144
    name: "Port 1 Amps"
    id: amps_1
    update_interval: 1s
    unit_of_measurement: A
    filters: 
      - lambda: return x * (500.0/470.0);
  - platform: ads1115
    ads1115_id: ads1115_1
    multiplexer: 'A1_GND'
    gain: 6.144
    name: "Port 2 Amps"
    id: amps_2
    update_interval: 1s
    unit_of_measurement: A
    filters: 
      - lambda: return x * (500.0/470.0);
  - platform: ads1115
    ads1115_id: ads1115_1
    multiplexer: 'A2_GND'
    gain: 6.144
    name: "Port 3 Amps"
    id: amps_3
    update_interval: 1s
    unit_of_measurement: A
    filters: 
      - lambda: return x * (500.0/470.0);
  - platform: ads1115
    ads1115_id: ads1115_1
    multiplexer: 'A3_GND'
    gain: 6.144
    name: "Port 4 Amps"
    id: amps_4
    update_interval: 1s
    unit_of_measurement: A
    filters: 
      - lambda: return x * (500.0/470.0);
  - platform: ads1115
    ads1115_id: ads1115_2
    multiplexer: 'A0_GND'
    gain: 6.144
    name: "Port 5 Amps"
    id: amps_5
    update_interval: 1s
    unit_of_measurement: A
    filters: 
      - lambda: return x * (500.0/470.0);
  - platform: ads1115
    ads1115_id: ads1115_2
    multiplexer: 'A1_GND'
    gain: 6.144
    name: "Port 6 Amps"
    id: amps_6
    update_interval: 1s
    unit_of_measurement: A
    filters: 
      - lambda: return x * (500.0/470.0);
  - platform: ads1115
    ads1115_id: ads1115_2
    multiplexer: 'A2_GND'
    gain: 6.144
    name: "Port 7 Amps"
    id: amps_7
    update_interval: 1s
    unit_of_measurement: A
    filters: 
      - lambda: return x * (500.0/470.0);
  - platform: ads1115
    ads1115_id: ads1115_2
    multiplexer: 'A3_GND'
    gain: 4.096
    name: "Input Voltage"
    id: volts_in
    update_interval: 1s
    filters:
      - lambda: return x * ((10.0+1.2)/1.2);

i2c:
  sda: GPIO5
  scl: GPIO6
  scan: true
  id: bus_a
  frequency: 400kHz

ads1115:
  - address: 0x48
    id: ads1115_1
  - address: 0x49
    id: ads1115_2
pca9554:
  - id: 'pca9554a_device'
    address: 0x38

# Individual outputs
switch:
  - platform: gpio
    name: "Port 1"
    restore_mode: RESTORE_DEFAULT_ON
    pin:
      pca9554: pca9554a_device
      # Use pin number 0
      number: 0
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false
  - platform: gpio
    name: "Port 2"
    restore_mode: RESTORE_DEFAULT_ON
    pin:
      pca9554: pca9554a_device
      # Use pin number 0
      number: 1
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false
  - platform: gpio
    name: "Port 3"
    restore_mode: RESTORE_DEFAULT_ON
    pin:
      pca9554: pca9554a_device
      # Use pin number 0
      number: 2
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false
  - platform: gpio
    name: "Port 4"
    restore_mode: RESTORE_DEFAULT_ON
    pin:
      pca9554: pca9554a_device
      # Use pin number 0
      number: 3
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false
  - platform: gpio
    name: "Port 5"
    restore_mode: RESTORE_DEFAULT_ON
    pin:
      pca9554: pca9554a_device
      # Use pin number 0
      number: 4
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false
  - platform: gpio
    name: "Port 6"
    restore_mode: RESTORE_DEFAULT_ON
    pin:
      pca9554: pca9554a_device
      # Use pin number 0
      number: 5
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false
  - platform: gpio
    name: "Port 7"
    restore_mode: RESTORE_DEFAULT_ON
    pin:
      pca9554: pca9554a_device
      # Use pin number 0
      number: 6
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false


      
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ESP IP Address
      address_0:
        name: ESP IP Address 0
        id: ip1
      address_1:
        name: ESP IP Address 1
      address_2:
        name: ESP IP Address 2
      address_3:
        name: ESP IP Address 3
      address_4:
        name: ESP IP Address 4
    ssid:
      name: ESP Connected SSID
      id: wifi_ssid
    bssid:
      name: ESP Connected BSSID
      id: bssid
    mac_address:
      name: ESP Mac Wifi Address
    scan_results:
      name: ESP Latest Scan Results
    dns_address:
      name: ESP DNS Address
