---
# Build the ESPHome binary firmware
# And deploy it to Github Pages.
name: Publish firmware

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files-array.outputs.files }}
    steps:
      - id: files-array
        run: |
          files=$(echo "firmware/dcbuddy.yml" | jq -Rcn 'inputs | . / ","')
          echo ::set-output name=files::$files

  build:
    name: Build ESPHome binary for ${{ matrix.file }}
    needs: [prepare]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.prepare.outputs.files) }}
    outputs:
      esphome-version: ${{ steps.esphome-build.outputs.esphome-version }}
    steps:
      - uses: actions/checkout@v4.1.6
      - uses: esphome/build-action@v2.0.0
        id: esphome-build
        with:
          yaml_file: ${{ matrix.file }}
          version: "2024.5.0"
      - run: |
          mkdir output
          mv "${{ steps.esphome-build.outputs.name }}" output/
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: dcbuddy
          path: output

  publish:
    name: Publish new firmware and website to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4.1.6
      - uses: actions/download-artifact@v3.0.2
        with:
          path: output
          name: dcbuddy

      - name: Create single manifest.json
        run: |
          jq -s '{"name": "dcbuddy", "version": "${{ needs.build.outputs.esphome-version }}", "home_assistant_domain": "esphome", "new_install_skip_erase": false, "builds":.}' output/*/manifest.json > output/manifest.json

      - run: cp -R static/* output

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages
          folder: output
          clean: true

